<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/tx 
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/aop 
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd">

	<!-- 注册目标对象-->
	<bean id="buyStockService" class="cn.spring.service.BuyStockServiceImpl"/>

	<!-- 注册切面 -->
	<bean id="myAspectj" class="cn.spring.aspectj.MyAspectj"/>

	<!-- aop配置 -->
	<aop:config>
		<!-- 定义切入占 -->
		<aop:pointcut expression="execution(* *..IBuyStockService.doFirst(..))" id="doFirst"/>
		<aop:pointcut expression="execution(* *..IBuyStockService.doSecond(..))" id="doSecond"/>
		<aop:pointcut expression="execution(* *..IBuyStockService.doThird(..))" id="doThird"/>
		<aop:aspect ref="myAspectj">	<!-- aspect 切面  引用上面定义的切面-->
			<!-- 前置通知 指定切入点  ponitcut-ref 引用定义的切入点 -->
			<aop:before method="before" pointcut-ref="doFirst"/> 
			<!-- 前置通知 方法带参数需要填入参数的类型 -->
			<aop:before method="before(org.aspectj.lang.JoinPoint)" pointcut-ref="doFirst"/>
			<!-- 后置通知 带参数 需要填入参数类型 并且要添加属性 returning 指定参数的名称result -->
			<aop:after-returning method="after(java.lang.String)" pointcut-ref="doSecond" returning="result"/>
			<!-- 环绕通知 -->
			<aop:around method="afterAndBefore(org.aspectj.lang.ProceedingJoinPoint)" pointcut-ref="doSecond"/>
			<!-- 异常通知 带参数 需要填入参数类型 并且要添加属性 returning 指定参数的名称 ex-->
			<aop:after-throwing method="afterException(java.lang.Exception)" pointcut-ref="doThird" throwing="ex"/>
			<!-- 最终通知 -->
			<aop:after method="after" pointcut-ref="doThird"/> 
		</aop:aspect>
	</aop:config>	

</beans>